/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import entity.TransactionDetail;
import java.awt.Dialog;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import pkg.Helper;
import pkg.Session;

/**
 *
 * @author atha3
 */
public class Transaction extends javax.swing.JPanel {
        private final controller.Product productController = new controller.Product();
        private final controller.Transaction transactionController = new controller.Transaction();
        private final controller.Customer customerController = new controller.Customer();
        private final List<entity.TransactionDetail> cart = new ArrayList<>();
        private final List<entity.Customer> customers = new ArrayList<>();
        private final DefaultTableModel model;

    /**
     * Creates new form Transaction
     */
    public Transaction() {
        initComponents();
        paymentDialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        
        initInvoice();
        model = (DefaultTableModel) cartTable.getModel();
        load();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        paymentDialog = new javax.swing.JDialog();
        paymentPanel = new javax.swing.JPanel();
        switchPaymentPanel = new javax.swing.JPanel();
        cashPanel = new javax.swing.JPanel();
        labelCashAmount = new javax.swing.JLabel();
        amountCashPayment = new javax.swing.JTextField();
        labelCashChange = new javax.swing.JLabel();
        changeField = new javax.swing.JTextField();
        cardPanel = new javax.swing.JPanel();
        labelCardNumber = new javax.swing.JLabel();
        cardNumber = new javax.swing.JTextField();
        qrisPanel = new javax.swing.JPanel();
        paymentTitle = new javax.swing.JLabel();
        labelPaymentTotal = new javax.swing.JLabel();
        paymentTotal = new javax.swing.JLabel();
        labelPaymentMethod = new javax.swing.JLabel();
        paymentMethod = new javax.swing.JComboBox<>();
        btnCancel = new javax.swing.JButton();
        btnPay = new javax.swing.JButton();
        transactionTitle = new javax.swing.JLabel();
        cashierPanel = new javax.swing.JPanel();
        cashierPanelHeader = new javax.swing.JPanel();
        labelCashierHeader = new javax.swing.JLabel();
        labelInvoice = new javax.swing.JLabel();
        transactionInvoice = new javax.swing.JTextField();
        labelDate = new javax.swing.JLabel();
        transactionDate = new javax.swing.JTextField();
        labelCustomer = new javax.swing.JLabel();
        transactionCustomer = new javax.swing.JComboBox<>();
        labelCashier = new javax.swing.JLabel();
        transactionCashier = new javax.swing.JTextField();
        cartPanel = new javax.swing.JPanel();
        labelTotalText = new javax.swing.JLabel();
        btnProccessPayment = new javax.swing.JButton();
        labelTotal = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        btnClearCart = new javax.swing.JButton();
        itemPanelHeader = new javax.swing.JPanel();
        labelItemHeader = new javax.swing.JLabel();
        productPanel = new javax.swing.JPanel();
        labelProductName = new javax.swing.JLabel();
        labelQty = new javax.swing.JLabel();
        productQty = new javax.swing.JTextField();
        labelStock = new javax.swing.JLabel();
        btnAddToCart = new javax.swing.JButton();
        productStock = new javax.swing.JTextField();
        productCode = new javax.swing.JTextField();
        productName = new javax.swing.JTextField();
        LabelProductName = new javax.swing.JLabel();
        cartPanelHeader = new javax.swing.JPanel();
        labelCartHeader = new javax.swing.JLabel();

        switchPaymentPanel.setLayout(new java.awt.CardLayout());

        labelCashAmount.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelCashAmount.setText("Amount");

        amountCashPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountCashPaymentKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                amountCashPaymentKeyReleased(evt);
            }
        });

        labelCashChange.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelCashChange.setText("Change");

        changeField.setText("-");
        changeField.setEnabled(false);

        javax.swing.GroupLayout cashPanelLayout = new javax.swing.GroupLayout(cashPanel);
        cashPanel.setLayout(cashPanelLayout);
        cashPanelLayout.setHorizontalGroup(
            cashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(amountCashPayment)
            .addGroup(cashPanelLayout.createSequentialGroup()
                .addGroup(cashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelCashAmount)
                    .addComponent(labelCashChange))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(changeField, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        cashPanelLayout.setVerticalGroup(
            cashPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashPanelLayout.createSequentialGroup()
                .addComponent(labelCashAmount)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(amountCashPayment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCashChange)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(changeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 18, Short.MAX_VALUE))
        );

        switchPaymentPanel.add(cashPanel, "card2");

        labelCardNumber.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelCardNumber.setText("Card Number");

        cardNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cardNumberKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout cardPanelLayout = new javax.swing.GroupLayout(cardPanel);
        cardPanel.setLayout(cardPanelLayout);
        cardPanelLayout.setHorizontalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addComponent(labelCardNumber)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(cardNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
        );
        cardPanelLayout.setVerticalGroup(
            cardPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cardPanelLayout.createSequentialGroup()
                .addComponent(labelCardNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 68, Short.MAX_VALUE))
        );

        switchPaymentPanel.add(cardPanel, "card2");

        javax.swing.GroupLayout qrisPanelLayout = new javax.swing.GroupLayout(qrisPanel);
        qrisPanel.setLayout(qrisPanelLayout);
        qrisPanelLayout.setHorizontalGroup(
            qrisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
        qrisPanelLayout.setVerticalGroup(
            qrisPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 112, Short.MAX_VALUE)
        );

        switchPaymentPanel.add(qrisPanel, "card2");

        paymentTitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        paymentTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        paymentTitle.setText("Payment");

        labelPaymentTotal.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelPaymentTotal.setText("Total: Rp.");

        labelPaymentMethod.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelPaymentMethod.setText("Payment Method");

        paymentMethod.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash", "Card", "QRIS" }));
        paymentMethod.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                paymentMethodItemStateChanged(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnPay.setText("Pay");
        btnPay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentPanelLayout = new javax.swing.GroupLayout(paymentPanel);
        paymentPanel.setLayout(paymentPanelLayout);
        paymentPanelLayout.setHorizontalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(paymentTitle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, paymentPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(paymentPanelLayout.createSequentialGroup()
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnPay, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(labelPaymentMethod)
                            .addGroup(paymentPanelLayout.createSequentialGroup()
                                .addComponent(labelPaymentTotal)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentTotal))
                            .addComponent(paymentMethod, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(switchPaymentPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        paymentPanelLayout.setVerticalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paymentTitle)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPaymentTotal)
                    .addComponent(paymentTotal))
                .addGap(18, 18, 18)
                .addComponent(labelPaymentMethod)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymentMethod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(switchPaymentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnPay))
                .addContainerGap())
        );

        javax.swing.GroupLayout paymentDialogLayout = new javax.swing.GroupLayout(paymentDialog.getContentPane());
        paymentDialog.getContentPane().setLayout(paymentDialogLayout);
        paymentDialogLayout.setHorizontalGroup(
            paymentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentDialogLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paymentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        paymentDialogLayout.setVerticalGroup(
            paymentDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentDialogLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(paymentPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        transactionTitle.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        transactionTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        transactionTitle.setText("Transaction");

        cashierPanel.setBackground(new java.awt.Color(255, 255, 255));

        cashierPanelHeader.setBackground(new java.awt.Color(247, 247, 247));

        labelCashierHeader.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        labelCashierHeader.setForeground(new java.awt.Color(58, 86, 107));
        labelCashierHeader.setText("Cashier");

        javax.swing.GroupLayout cashierPanelHeaderLayout = new javax.swing.GroupLayout(cashierPanelHeader);
        cashierPanelHeader.setLayout(cashierPanelHeaderLayout);
        cashierPanelHeaderLayout.setHorizontalGroup(
            cashierPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashierPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCashierHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cashierPanelHeaderLayout.setVerticalGroup(
            cashierPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashierPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCashierHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        labelInvoice.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelInvoice.setText("Invoice");

        transactionInvoice.setEnabled(false);

        labelDate.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelDate.setText("Date");

        transactionDate.setEnabled(false);

        labelCustomer.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelCustomer.setText("Customer");

        labelCashier.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelCashier.setText("Cashier");

        transactionCashier.setEnabled(false);

        javax.swing.GroupLayout cashierPanelLayout = new javax.swing.GroupLayout(cashierPanel);
        cashierPanel.setLayout(cashierPanelLayout);
        cashierPanelLayout.setHorizontalGroup(
            cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashierPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(transactionInvoice)
                    .addComponent(transactionDate)
                    .addComponent(transactionCustomer, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transactionCashier)
                    .addGroup(cashierPanelLayout.createSequentialGroup()
                        .addGroup(cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelInvoice)
                            .addComponent(labelDate)
                            .addComponent(labelCashier)
                            .addComponent(labelCustomer))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(cashierPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        cashierPanelLayout.setVerticalGroup(
            cashierPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cashierPanelLayout.createSequentialGroup()
                .addComponent(cashierPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelInvoice)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionInvoice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDate)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCashier)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionCashier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCustomer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 9, Short.MAX_VALUE))
        );

        cartPanel.setBackground(new java.awt.Color(255, 255, 255));

        labelTotalText.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelTotalText.setText("Total: Rp. ");

        btnProccessPayment.setBackground(new java.awt.Color(115, 96, 238));
        btnProccessPayment.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnProccessPayment.setForeground(new java.awt.Color(255, 255, 255));
        btnProccessPayment.setText("Proccess Payment");
        btnProccessPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProccessPaymentActionPerformed(evt);
            }
        });

        labelTotal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        labelTotal.setText("0");

        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "Product Name", "Price", "Qty", "Subtotal"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Long.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cartTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(cartTable);
        if (cartTable.getColumnModel().getColumnCount() > 0) {
            cartTable.getColumnModel().getColumn(0).setPreferredWidth(35);
            cartTable.getColumnModel().getColumn(0).setMaxWidth(35);
            cartTable.getColumnModel().getColumn(1).setResizable(false);
            cartTable.getColumnModel().getColumn(2).setResizable(false);
            cartTable.getColumnModel().getColumn(3).setResizable(false);
            cartTable.getColumnModel().getColumn(4).setResizable(false);
        }

        btnClearCart.setBackground(new java.awt.Color(255, 183, 72));
        btnClearCart.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnClearCart.setForeground(new java.awt.Color(255, 255, 255));
        btnClearCart.setText("Clear");
        btnClearCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearCartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout cartPanelLayout = new javax.swing.GroupLayout(cartPanel);
        cartPanel.setLayout(cartPanelLayout);
        cartPanelLayout.setHorizontalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
                    .addGroup(cartPanelLayout.createSequentialGroup()
                        .addComponent(labelTotalText)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnClearCart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProccessPayment)))
                .addContainerGap())
        );
        cartPanelLayout.setVerticalGroup(
            cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelTotalText)
                        .addComponent(labelTotal))
                    .addGroup(cartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnProccessPayment)
                        .addComponent(btnClearCart)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 397, Short.MAX_VALUE))
        );

        itemPanelHeader.setBackground(new java.awt.Color(247, 247, 247));

        labelItemHeader.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        labelItemHeader.setForeground(new java.awt.Color(58, 86, 107));
        labelItemHeader.setText("Product");

        productPanel.setBackground(new java.awt.Color(255, 255, 255));

        labelProductName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelProductName.setText("Product Code");

        labelQty.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelQty.setText("Qty");

        productQty.setEnabled(false);
        productQty.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                productQtyKeyPressed(evt);
            }
        });

        labelStock.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        labelStock.setText("Stock");

        btnAddToCart.setBackground(new java.awt.Color(40, 183, 121));
        btnAddToCart.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnAddToCart.setForeground(new java.awt.Color(255, 255, 255));
        btnAddToCart.setText("Add to Cart");
        btnAddToCart.setEnabled(false);
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });

        productStock.setEnabled(false);

        productCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                productCodeKeyReleased(evt);
            }
        });

        productName.setToolTipText("");
        productName.setEnabled(false);

        LabelProductName.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        LabelProductName.setText("Product Name");

        javax.swing.GroupLayout productPanelLayout = new javax.swing.GroupLayout(productPanel);
        productPanel.setLayout(productPanelLayout);
        productPanelLayout.setHorizontalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(productCode)
                    .addComponent(productName)
                    .addGroup(productPanelLayout.createSequentialGroup()
                        .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelProductName)
                            .addComponent(btnAddToCart)
                            .addComponent(LabelProductName)
                            .addGroup(productPanelLayout.createSequentialGroup()
                                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(productQty, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labelQty))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelStock)
                                    .addComponent(productStock, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        productPanelLayout.setVerticalGroup(
            productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(labelProductName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(LabelProductName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQty)
                    .addComponent(labelStock))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(productPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(productStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAddToCart))
        );

        javax.swing.GroupLayout itemPanelHeaderLayout = new javax.swing.GroupLayout(itemPanelHeader);
        itemPanelHeader.setLayout(itemPanelHeaderLayout);
        itemPanelHeaderLayout.setHorizontalGroup(
            itemPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelItemHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemPanelHeaderLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(productPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        itemPanelHeaderLayout.setVerticalGroup(
            itemPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelItemHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(productPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cartPanelHeader.setBackground(new java.awt.Color(247, 247, 247));

        labelCartHeader.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        labelCartHeader.setForeground(new java.awt.Color(58, 86, 107));
        labelCartHeader.setText("Cart");

        javax.swing.GroupLayout cartPanelHeaderLayout = new javax.swing.GroupLayout(cartPanelHeader);
        cartPanelHeader.setLayout(cartPanelHeaderLayout);
        cartPanelHeaderLayout.setHorizontalGroup(
            cartPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCartHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        cartPanelHeaderLayout.setVerticalGroup(
            cartPanelHeaderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cartPanelHeaderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelCartHeader)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(transactionTitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(itemPanelHeader, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cashierPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cartPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cartPanelHeader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(transactionTitle)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cashierPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cartPanelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(cartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        addToCart();
    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void addToCart() {
        if (productCode.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Input the product code first!", "Validation Error", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        try {
            if (productQty.getText().isEmpty()) {
                throw new Exception("Input the qty first!");
            }
            
            String itemName = productName.getText();
            int qty = Integer.parseInt(productQty.getText());
            int stock = Integer.parseInt(productStock.getText());
            
            if (qty < 1) {
                throw new Exception("Minimum qty is 1");
            }
            
            if (qty > stock) {
                throw new Exception("Qty cannot exceed stock!");
            }
            
            entity.Product product = productController.getProductByCode(productCode.getText());
            
            if (product == null) return;
            
            long price = product.getPrice();
            long subtotal = price * qty;
            
            entity.TransactionDetail td = cart.stream().filter(x -> x.getProduct().getName().equalsIgnoreCase(itemName)).findFirst().orElse(null);
            
            if (td != null) {
                int newQty = td.getQty() + qty;
                td.setQty(newQty);
                int row = Helper.findRowByValueInColumn(model, 1, itemName);
                long oldSubTotal = Long.parseLong(model.getValueAt(row, 4).toString().substring(4));
                model.setValueAt("Rp. " + (subtotal + oldSubTotal), row, 4);
                model.setValueAt(newQty, row, 3);
            } else {
                entity.TransactionDetail item = new TransactionDetail(qty, product);
                cart.add(item);
                model.addRow(new Object[]{ cart.size() , itemName, "Rp. " + price, qty, "Rp. " + subtotal });
            }
            
            long oldTotal = Long.parseLong(labelTotal.getText());
            labelTotal.setText(String.valueOf(oldTotal + subtotal));
            reload();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Qty must be a number!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }
    
    private void btnProccessPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProccessPaymentActionPerformed
        if (cart.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Cart is empty!");
            return;
        }
        
        paymentDialog.pack();
        paymentDialog.setLocationRelativeTo(this);
        
        paymentTotal.setText(labelTotal.getText());
        amountCashPayment.grabFocus();
        this.setEnabled(false);
        paymentDialog.setVisible(true);
    }//GEN-LAST:event_btnProccessPaymentActionPerformed

    private void btnClearCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearCartActionPerformed
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure want to clear cart?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) return;
        
        cart.clear();
        model.setRowCount(0);
        labelTotal.setText("0");
        reload();
    }//GEN-LAST:event_btnClearCartActionPerformed

    private void switchPayment(javax.swing.JPanel to) {
        cashPanel.setVisible(false);
        cardPanel.setVisible(false);
        qrisPanel.setVisible(false);
        to.setVisible(true);
    }
    
    private void paymentMethodItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_paymentMethodItemStateChanged
        paymentTotal.setText(labelTotal.getText());
        
        switch (evt.getItem().toString().toLowerCase()) {
            case "card" -> switchPayment(cardPanel);
            case "cash" -> switchPayment(cashPanel);
            case "qris" -> switchPayment(qrisPanel);
        }
    }//GEN-LAST:event_paymentMethodItemStateChanged

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.setEnabled(true);
        paymentDialog.setVisible(false);
        cardNumber.setText("");
        amountCashPayment.setText("");
        changeField.setText("");
        paymentMethod.setSelectedIndex(0);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void amountCashPaymentKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountCashPaymentKeyReleased
        try {
            long amount = Long.parseLong(amountCashPayment.getText());
            long total = Long.parseLong(paymentTotal.getText());
            
            if (total > amount) throw new NumberFormatException();
            
            long c = amount - total;
            
            changeField.setText(String.valueOf(c));
        } catch (NumberFormatException e) {
            changeField.setText("-");
        }
    }//GEN-LAST:event_amountCashPaymentKeyReleased
    
    private void pay() {
        String method = paymentMethod.getSelectedItem().toString();
        
        try {
            long total = Long.parseLong(paymentTotal.getText());
            long amount = total;
            String cn = "";
            String customer = transactionCustomer.getSelectedItem().toString();
            String invoice = transactionInvoice.getText();
            
            
            if (transactionCustomer.getSelectedIndex() == 0) {
                customer = "";
            }
            
            if (method.equalsIgnoreCase("cash")) {
                amount = Long.parseLong(amountCashPayment.getText());
                
                if (amount < total) {
                    JOptionPane.showMessageDialog(paymentPanel, "The amount must be greater than the total!");
                    return;
                }
            }  else if (method.equalsIgnoreCase("card")) {
                amount = total;
                cn = cardNumber.getText();
                if (!Helper.isNumeric(cn)) {
                    JOptionPane.showMessageDialog(paymentPanel, "Invalid card number!");
                    return;
                }
            }

            int rowsAffected = transactionController.createTransaction(cart, customer, invoice, total, method, amount, cn);
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(paymentPanel, "Success!");
            } else {
                JOptionPane.showMessageDialog(this, "Ooops... Failed", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }
            
            load();
            initInvoice();
            
            model.setRowCount(0);
            paymentDialog.setVisible(false);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(paymentPanel, "Please complete all required fields with valid information!");
        }
    }
    
    private void btnPayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayActionPerformed
        pay();
    }//GEN-LAST:event_btnPayActionPerformed

    private void productCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productCodeKeyReleased
        entity.Product product = productController.getProductByCode(productCode.getText());
        
        if (product == null) return;
        
        int stock = product.getStock();
        
        entity.TransactionDetail td = cart.stream().filter(x -> x.getProduct().getCode().equalsIgnoreCase(productCode.getText())).findFirst().orElse(null);
        if (td != null) {
            stock -= td.getQty();
        }
        
        productName.setText(product.getName());
        productStock.setText(String.valueOf(stock));
        productQty.setEnabled(true);
        btnAddToCart.setEnabled(true);
        productQty.grabFocus();
    }//GEN-LAST:event_productCodeKeyReleased

    private void productQtyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_productQtyKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) addToCart();
    }//GEN-LAST:event_productQtyKeyPressed

    private void amountCashPaymentKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountCashPaymentKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) pay();
    }//GEN-LAST:event_amountCashPaymentKeyPressed

    private void cardNumberKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNumberKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) pay();
    }//GEN-LAST:event_cardNumberKeyPressed
    
    public void initInvoice() {
        transactionInvoice.setText(transactionController.generateInvoice());
    }
    
    public void load() {
        LocalDate today = LocalDate.now();

        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String formattedDate = today.format(formatter);

        transactionDate.setText(formattedDate);
        cart.clear();
        model.setRowCount(0);
        
        loadCustomer();
        cart.clear();
        labelTotal.setText("0");
        reload();
        
        productCode.grabFocus();
    }
    
    public void loadCustomer() {
        transactionCustomer.removeAllItems();
        transactionCustomer.addItem("");
        List<entity.Customer> rows = customerController.getAllCustomers();
        for (entity.Customer c : rows) {
            customers.add(c);
            transactionCustomer.addItem(c.getName());
        }
    }
    
    public void initCashier() {
        entity.Cashier cashier = Session.getCashier();
        transactionCashier.setText(cashier.getName());
    }
    
    public void reload() {
        productCode.setText("");
        productName.setText("");
        productQty.setText("");
        productQty.setEnabled(false);
        productStock.setText("");
        btnAddToCart.setEnabled(false);
        amountCashPayment.setText("");
        paymentMethod.setSelectedIndex(0);
        cardNumber.setText("");
        changeField.setText("-");
        switchPayment(cashPanel);
        productCode.grabFocus();
    }
    
    public void focusOnProductCodeInput() {
        productCode.grabFocus();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LabelProductName;
    private javax.swing.JTextField amountCashPayment;
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnClearCart;
    private javax.swing.JButton btnPay;
    private javax.swing.JButton btnProccessPayment;
    private javax.swing.JTextField cardNumber;
    private javax.swing.JPanel cardPanel;
    private javax.swing.JPanel cartPanel;
    private javax.swing.JPanel cartPanelHeader;
    private javax.swing.JTable cartTable;
    private javax.swing.JPanel cashPanel;
    private javax.swing.JPanel cashierPanel;
    private javax.swing.JPanel cashierPanelHeader;
    private javax.swing.JTextField changeField;
    private javax.swing.JPanel itemPanelHeader;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel labelCardNumber;
    private javax.swing.JLabel labelCartHeader;
    private javax.swing.JLabel labelCashAmount;
    private javax.swing.JLabel labelCashChange;
    private javax.swing.JLabel labelCashier;
    private javax.swing.JLabel labelCashierHeader;
    private javax.swing.JLabel labelCustomer;
    private javax.swing.JLabel labelDate;
    private javax.swing.JLabel labelInvoice;
    private javax.swing.JLabel labelItemHeader;
    private javax.swing.JLabel labelPaymentMethod;
    private javax.swing.JLabel labelPaymentTotal;
    private javax.swing.JLabel labelProductName;
    private javax.swing.JLabel labelQty;
    private javax.swing.JLabel labelStock;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelTotalText;
    private javax.swing.JDialog paymentDialog;
    private javax.swing.JComboBox<String> paymentMethod;
    private javax.swing.JPanel paymentPanel;
    private javax.swing.JLabel paymentTitle;
    private javax.swing.JLabel paymentTotal;
    private javax.swing.JTextField productCode;
    private javax.swing.JTextField productName;
    private javax.swing.JPanel productPanel;
    private javax.swing.JTextField productQty;
    private javax.swing.JTextField productStock;
    private javax.swing.JPanel qrisPanel;
    private javax.swing.JPanel switchPaymentPanel;
    private javax.swing.JTextField transactionCashier;
    private javax.swing.JComboBox<String> transactionCustomer;
    private javax.swing.JTextField transactionDate;
    private javax.swing.JTextField transactionInvoice;
    private javax.swing.JLabel transactionTitle;
    // End of variables declaration//GEN-END:variables
}
